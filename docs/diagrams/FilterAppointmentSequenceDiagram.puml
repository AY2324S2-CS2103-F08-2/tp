@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":PatientListParser" as PatientListParser LOGIC_COLOR
participant ":FilterAppointmentParser" as FilterAppointmentParser LOGIC_COLOR
participant ":FilterAppointmentPredicate" as FilterAppointmentPredicate LOGIC_COLOR
participant ":FilterAppointmentCommand" as FilterAppointmentCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("filter sd/2021-10-10 10:10 \n ed/2021-10-10 11:10")
activate LogicManager
LogicManager -> PatientListParser : parse("filter sd/2021-10-10 10:10 \ned/2021-10-10 11:10")
activate PatientListParser

create FilterAppointmentParser
PatientListParser -> FilterAppointmentParser
activate FilterAppointmentParser

FilterAppointmentParser --> PatientListParser
deactivate FilterAppointmentParser
PatientListParser -> FilterAppointmentParser : parse(arguments)
activate FilterAppointmentParser

create FilterAppointmentPredicate
FilterAppointmentParser -> FilterAppointmentPredicate: new FilterAppointmentPredicate()
activate FilterAppointmentPredicate
FilterAppointmentPredicate --> FilterAppointmentParser
deactivate FilterAppointmentPredicate

create FilterAppointmentCommand
FilterAppointmentParser -> FilterAppointmentCommand: new FilterAppointmentCommand()
activate FilterAppointmentCommand
FilterAppointmentCommand --> FilterAppointmentParser
deactivate FilterAppointmentCommand

FilterAppointmentParser --> PatientListParser : return command
deactivate FilterAppointmentParser
destroy FilterAppointmentParser

PatientListParser --> LogicManager : return command
deactivate PatientListParser
LogicManager -> FilterAppointmentCommand : execute

activate FilterAppointmentCommand
FilterAppointmentCommand -> FilterAppointmentCommand: check valid datetime

FilterAppointmentCommand -> Model : updateFilteredAppointmentList(predicate)
activate Model
Model --> FilterAppointmentCommand
deactivate Model

FilterAppointmentCommand -> CommandResult : new CommandResult()
activate CommandResult
CommandResult --> FilterAppointmentCommand
deactivate CommandResult

FilterAppointmentCommand -> Model: getFilteredAppointmentList().size()
activate Model
Model --> FilterAppointmentCommand
deactivate Model

FilterAppointmentCommand --> LogicManager : return result
deactivate FilterAppointmentCommand
destroy FilterAppointmentCommand
[<-- LogicManager : successfully filter appointment
@enduml
